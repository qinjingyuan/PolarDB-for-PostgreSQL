import{_ as d,M as e,p as k,q as v,N as s,R as a,t as n,V as t,a1 as l}from"./framework-de73eade.js";const m={},_=a("h1",{id:"基于-pfs-for-curvebs-文件系统部署",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#基于-pfs-for-curvebs-文件系统部署","aria-hidden":"true"},"#"),n(" 基于 PFS for CurveBS 文件系统部署")],-1),b=a("p",null,"本文将指导您在分布式文件系统 PolarDB File System（PFS）上编译部署 PolarDB，适用于已经在 Curve 块存储上格式化并挂载 PFS 的计算节点。",-1),g={href:"https://hub.docker.com/r/polardb/polardb_pg_devel/tags",target:"_blank",rel:"noopener noreferrer"},h=a("h2",{id:"源码下载",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#源码下载","aria-hidden":"true"},"#"),n(" 源码下载")],-1),f={href:"https://github.com/ApsaraDB/PolarDB-for-PostgreSQL",target:"_blank",rel:"noopener noreferrer"},y=a("code",null,"POLARDB_11_STABLE",-1),E={href:"https://gitee.com/mirrors/PolarDB-for-PostgreSQL",target:"_blank",rel:"noopener noreferrer"},x=a("div",{class:"language-bash","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"git"),n(" clone "),a("span",{class:"token parameter variable"},"-b"),n(` POLARDB_11_STABLE https://github.com/ApsaraDB/PolarDB-for-PostgreSQL.git
`)])])],-1),P=a("div",{class:"language-bash","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"git"),n(" clone "),a("span",{class:"token parameter variable"},"-b"),n(` POLARDB_11_STABLE https://gitee.com/mirrors/PolarDB-for-PostgreSQL
`)])])],-1),B=l(`<p>代码克隆完毕后，进入源码目录：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> PolarDB-for-PostgreSQL/
</code></pre></div><h2 id="编译部署-polardb" tabindex="-1"><a class="header-anchor" href="#编译部署-polardb" aria-hidden="true">#</a> 编译部署 PolarDB</h2><h3 id="读写节点部署" tabindex="-1"><a class="header-anchor" href="#读写节点部署" aria-hidden="true">#</a> 读写节点部署</h3>`,4),D=a("code",null,"--with-pfsd",-1),H=l(`<div class="language-bash" data-ext="sh"><pre class="language-bash"><code>./polardb_build.sh --with-pfsd
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>上述脚本在编译完成后，会自动部署一个基于 <strong>本地文件系统</strong> 的实例，运行于 <code>5432</code> 端口上。</p><p>手动键入以下命令停止这个实例，以便 <strong>在 PFS 和共享存储上重新部署实例</strong>：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token environment constant">$HOME</span>/tmp_basedir_polardb_pg_1100_bld/bin/pg_ctl <span class="token punctuation">\\</span>
    <span class="token parameter variable">-D</span> <span class="token environment constant">$HOME</span>/tmp_master_dir_polardb_pg_1100_bld/ <span class="token punctuation">\\</span>
    stop
</code></pre></div></div><p>在节点本地初始化数据目录 <code>$HOME/primary/</code>：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token environment constant">$HOME</span>/tmp_basedir_polardb_pg_1100_bld/bin/initdb <span class="token parameter variable">-D</span> <span class="token environment constant">$HOME</span>/primary
</code></pre></div><p>在共享存储的 <code>/pool@@volume_my_/shared_data</code> 目录上初始化共享数据目录</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 使用 pfs 创建共享数据目录</span>
<span class="token function">sudo</span> pfs <span class="token parameter variable">-C</span> curve <span class="token function">mkdir</span> /pool@@volume_my_/shared_data
<span class="token comment"># 初始化 db 的本地和共享数据目录</span>
<span class="token function">sudo</span> <span class="token environment constant">$HOME</span>/tmp_basedir_polardb_pg_1100_bld/bin/polar-initdb.sh <span class="token punctuation">\\</span>
    <span class="token environment constant">$HOME</span>/primary/ /pool@@volume_my_/shared_data/ curve
</code></pre></div><p>编辑读写节点的配置。打开 <code>$HOME/primary/postgresql.conf</code>，增加配置项：</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token key attr-name">port</span><span class="token punctuation">=</span><span class="token value attr-value">5432</span>
<span class="token key attr-name">polar_hostid</span><span class="token punctuation">=</span><span class="token value attr-value">1</span>
<span class="token key attr-name">polar_enable_shared_storage_mode</span><span class="token punctuation">=</span><span class="token value attr-value">on</span>
<span class="token key attr-name">polar_disk_name</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">pool@@volume_my_</span>&#39;</span>
<span class="token key attr-name">polar_datadir</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">/pool@@volume_my_/shared_data/</span>&#39;</span>
<span class="token key attr-name">polar_vfs.localfs_mode</span><span class="token punctuation">=</span><span class="token value attr-value">off</span>
<span class="token key attr-name">shared_preload_libraries</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">$libdir/polar_vfs,$libdir/polar_worker</span>&#39;</span>
<span class="token key attr-name">polar_storage_cluster_name</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">curve</span>&#39;</span>
<span class="token key attr-name">logging_collector</span><span class="token punctuation">=</span><span class="token value attr-value">on</span>
<span class="token key attr-name">log_line_prefix</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">%p\\t%r\\t%u\\t%m\\t</span>&#39;</span>
<span class="token key attr-name">log_directory</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">pg_log</span>&#39;</span>
<span class="token key attr-name">listen_addresses</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">*</span>&#39;</span>
<span class="token key attr-name">max_connections</span><span class="token punctuation">=</span><span class="token value attr-value">1000</span>
<span class="token key attr-name">synchronous_standby_names</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">replica1</span>&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打开 <code>$HOME/primary/pg_hba.conf</code>，增加以下配置项：</p><div class="language-ini" data-ext="ini"><pre class="language-ini"><code>host	replication	postgres	0.0.0.0/0	trust
</code></pre></div><p>最后，启动读写节点：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token environment constant">$HOME</span>/tmp_basedir_polardb_pg_1100_bld/bin/pg_ctl start <span class="token parameter variable">-D</span> <span class="token environment constant">$HOME</span>/primary
</code></pre></div><p>检查读写节点能否正常运行：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token environment constant">$HOME</span>/tmp_basedir_polardb_pg_1100_bld/bin/psql <span class="token punctuation">\\</span>
    <span class="token parameter variable">-p</span> <span class="token number">5432</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-d</span> postgres <span class="token punctuation">\\</span>
    <span class="token parameter variable">-c</span> <span class="token string">&#39;select version();&#39;</span>
<span class="token comment"># 下面为输出内容</span>
            version
--------------------------------
 PostgreSQL <span class="token number">11.9</span> <span class="token punctuation">(</span>POLARDB <span class="token number">11.9</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">1</span> row<span class="token punctuation">)</span>
</code></pre></div><p>在读写节点上，为对应的只读节点创建相应的 replication slot，用于只读节点的物理流复制：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token environment constant">$HOME</span>/tmp_basedir_polardb_pg_1100_bld/bin/psql <span class="token punctuation">\\</span>
    <span class="token parameter variable">-p</span> <span class="token number">5432</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-d</span> postgres <span class="token punctuation">\\</span>
    <span class="token parameter variable">-c</span> <span class="token string">&quot;select pg_create_physical_replication_slot(&#39;replica1&#39;);&quot;</span>
<span class="token comment"># 下面为输出内容</span>
 pg_create_physical_replication_slot
-------------------------------------
 <span class="token punctuation">(</span>replica1,<span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">1</span> row<span class="token punctuation">)</span>
</code></pre></div><h3 id="只读节点部署" tabindex="-1"><a class="header-anchor" href="#只读节点部署" aria-hidden="true">#</a> 只读节点部署</h3><p>在只读节点上，使用 <code>--with-pfsd</code> 选项编译 PolarDB 内核。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>./polardb_build.sh --with-pfsd
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>上述脚本在编译完成后，会自动部署一个基于 <strong>本地文件系统</strong> 的实例，运行于 <code>5432</code> 端口上。</p><p>手动键入以下命令停止这个实例，以便 <strong>在 PFS 和共享存储上重新部署实例</strong>：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token environment constant">$HOME</span>/tmp_basedir_polardb_pg_1100_bld/bin/pg_ctl <span class="token punctuation">\\</span>
    <span class="token parameter variable">-D</span> <span class="token environment constant">$HOME</span>/tmp_master_dir_polardb_pg_1100_bld/ <span class="token punctuation">\\</span>
    stop
</code></pre></div></div><p>在节点本地初始化数据目录 <code>$HOME/replica1/</code>：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token environment constant">$HOME</span>/tmp_basedir_polardb_pg_1100_bld/bin/initdb <span class="token parameter variable">-D</span> <span class="token environment constant">$HOME</span>/replica1
</code></pre></div><p>编辑只读节点的配置。打开 <code>$HOME/replica1/postgresql.conf</code>，增加配置项：</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token key attr-name">port</span><span class="token punctuation">=</span><span class="token value attr-value">5433</span>
<span class="token key attr-name">polar_hostid</span><span class="token punctuation">=</span><span class="token value attr-value">2</span>
<span class="token key attr-name">polar_enable_shared_storage_mode</span><span class="token punctuation">=</span><span class="token value attr-value">on</span>
<span class="token key attr-name">polar_disk_name</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">pool@@volume_my_</span>&#39;</span>
<span class="token key attr-name">polar_datadir</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">/pool@@volume_my_/shared_data/</span>&#39;</span>
<span class="token key attr-name">polar_vfs.localfs_mode</span><span class="token punctuation">=</span><span class="token value attr-value">off</span>
<span class="token key attr-name">shared_preload_libraries</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">$libdir/polar_vfs,$libdir/polar_worker</span>&#39;</span>
<span class="token key attr-name">polar_storage_cluster_name</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">curve</span>&#39;</span>
<span class="token key attr-name">logging_collector</span><span class="token punctuation">=</span><span class="token value attr-value">on</span>
<span class="token key attr-name">log_line_prefix</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">%p\\t%r\\t%u\\t%m\\t</span>&#39;</span>
<span class="token key attr-name">log_directory</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">pg_log</span>&#39;</span>
<span class="token key attr-name">listen_addresses</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">*</span>&#39;</span>
<span class="token key attr-name">max_connections</span><span class="token punctuation">=</span><span class="token value attr-value">1000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建 <code>$HOME/replica1/recovery.conf</code>，增加以下配置项：</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>请在下面替换读写节点（容器）所在的 IP 地址。</p></div><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token key attr-name">polar_replica</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">on</span>&#39;</span>
<span class="token key attr-name">recovery_target_timeline</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">latest</span>&#39;</span>
<span class="token key attr-name">primary_slot_name</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">replica1</span>&#39;</span>
<span class="token key attr-name">primary_conninfo</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">host=[读写节点所在IP] port=5432 user=postgres dbname=postgres application_name=replica1</span>&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后，启动只读节点：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token environment constant">$HOME</span>/tmp_basedir_polardb_pg_1100_bld/bin/pg_ctl start <span class="token parameter variable">-D</span> <span class="token environment constant">$HOME</span>/replica1
</code></pre></div><p>检查只读节点能否正常运行：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token environment constant">$HOME</span>/tmp_basedir_polardb_pg_1100_bld/bin/psql <span class="token punctuation">\\</span>
    <span class="token parameter variable">-p</span> <span class="token number">5433</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-d</span> postgres <span class="token punctuation">\\</span>
    <span class="token parameter variable">-c</span> <span class="token string">&#39;select version();&#39;</span>
<span class="token comment"># 下面为输出内容</span>
            version
--------------------------------
 PostgreSQL <span class="token number">11.9</span> <span class="token punctuation">(</span>POLARDB <span class="token number">11.9</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">1</span> row<span class="token punctuation">)</span>
</code></pre></div><h3 id="集群检查和测试" tabindex="-1"><a class="header-anchor" href="#集群检查和测试" aria-hidden="true">#</a> 集群检查和测试</h3><p>部署完成后，需要进行实例检查和测试，确保读写节点可正常写入数据、只读节点可以正常读取。</p><p>登录 <strong>读写节点</strong>，创建测试表并插入样例数据：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token environment constant">$HOME</span>/tmp_basedir_polardb_pg_1100_bld/bin/psql <span class="token parameter variable">-q</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-p</span> <span class="token number">5432</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-d</span> postgres <span class="token punctuation">\\</span>
    <span class="token parameter variable">-c</span> <span class="token string">&quot;create table t(t1 int primary key, t2 int);insert into t values (1, 1),(2, 3),(3, 3);&quot;</span>
</code></pre></div><p>登录 <strong>只读节点</strong>，查询刚刚插入的样例数据：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token environment constant">$HOME</span>/tmp_basedir_polardb_pg_1100_bld/bin/psql <span class="token parameter variable">-q</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-p</span> <span class="token number">5433</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">-d</span> postgres <span class="token punctuation">\\</span>
    <span class="token parameter variable">-c</span> <span class="token string">&quot;select * from t;&quot;</span>
<span class="token comment"># 下面为输出内容</span>
 t1 <span class="token operator">|</span> t2
----+----
  <span class="token number">1</span> <span class="token operator">|</span>  <span class="token number">1</span>
  <span class="token number">2</span> <span class="token operator">|</span>  <span class="token number">3</span>
  <span class="token number">3</span> <span class="token operator">|</span>  <span class="token number">3</span>
<span class="token punctuation">(</span><span class="token number">3</span> rows<span class="token punctuation">)</span>
</code></pre></div><p>在读写节点上插入的数据对只读节点可见。</p>`,38);function O(r,$){const c=e("ArticleInfo"),p=e("ExternalLinkIcon"),o=e("CodeGroupItem"),i=e("CodeGroup"),u=e("RouterLink");return k(),v("div",null,[_,s(c,{frontmatter:r.$frontmatter},null,8,["frontmatter"]),b,a("p",null,[n("我们在 DockerHub 上提供了一个 "),a("a",g,[n("PolarDB 开发镜像"),s(p)]),n("，里面已经包含编译运行 PolarDB for PostgreSQL 所需要的所有依赖。您可以直接使用这个开发镜像进行实例搭建。镜像目前支持 AMD64 和 ARM64 两种 CPU 架构。")]),h,a("p",null,[n("在前置文档中，我们已经从 DockerHub 上拉取了 PolarDB 开发镜像，并且进入到了容器中。进入容器后，从 "),a("a",f,[n("GitHub"),s(p)]),n(" 上下载 PolarDB for PostgreSQL 的源代码，稳定分支为 "),y,n("。如果因网络原因不能稳定访问 GitHub，则可以访问 "),a("a",E,[n("Gitee 国内镜像"),s(p)]),n("。")]),s(i,null,{default:t(()=>[s(o,{title:"GitHub"},{default:t(()=>[x]),_:1}),s(o,{title:"Gitee 国内镜像"},{default:t(()=>[P]),_:1})]),_:1}),B,a("p",null,[n("在读写节点上，使用 "),D,n(" 选项编译 PolarDB 内核。请参考 "),s(u,{to:"/development/dev-on-docker.html#%E7%BC%96%E8%AF%91%E6%B5%8B%E8%AF%95%E9%80%89%E9%A1%B9%E8%AF%B4%E6%98%8E"},{default:t(()=>[n("编译测试选项说明")]),_:1}),n(" 查看更多编译选项的说明。")]),H])}const A=d(m,[["render",O],["__file","db-pfs-curve.html.vue"]]);export{A as default};
