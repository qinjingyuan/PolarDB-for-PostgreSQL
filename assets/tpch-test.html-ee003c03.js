import{_ as u,M as e,p as i,q as d,N as a,R as s,V as p,t as n,a1 as t}from"./framework-de73eade.js";const m={},b=s("h1",{id:"tpc-h-测试",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#tpc-h-测试","aria-hidden":"true"},"#"),n(" TPC-H 测试")],-1),w=s("p",null,"本文将引导您对 PolarDB for PostgreSQL 进行 TPC-H 测试。",-1),y={class:"table-of-contents"},h=s("h2",{id:"背景",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#背景","aria-hidden":"true"},"#"),n(" 背景")],-1),g={href:"https://www.tpc.org/tpch/default5.asp",target:"_blank",rel:"noopener noreferrer"},_=t(`<h2 id="测试准备" tabindex="-1"><a class="header-anchor" href="#测试准备" aria-hidden="true">#</a> 测试准备</h2><h3 id="部署-polardb-pg" tabindex="-1"><a class="header-anchor" href="#部署-polardb-pg" aria-hidden="true">#</a> 部署 PolarDB-PG</h3><p>使用 Docker 快速拉起一个基于本地存储的 PolarDB for PostgreSQL 集群：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull polardb/polardb_pg_local_instance:htap
<span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token punctuation">\\</span>
    --cap-add<span class="token operator">=</span>SYS_PTRACE <span class="token punctuation">\\</span>
    <span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token punctuation">\\</span>
    <span class="token parameter variable">--name</span> polardb_pg_htap <span class="token punctuation">\\</span>
    --shm-size<span class="token operator">=</span>512m <span class="token punctuation">\\</span>
    polardb/polardb_pg_local_instance:htap <span class="token punctuation">\\</span>
    <span class="token function">bash</span>
</code></pre></div>`,4),P=s("h3",{id:"生成-tpc-h-测试数据集",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#生成-tpc-h-测试数据集","aria-hidden":"true"},"#"),n(" 生成 TPC-H 测试数据集")],-1),f={href:"https://github.com/ApsaraDB/tpch-dbgen",target:"_blank",rel:"noopener noreferrer"},T=t(`<div class="language-bash" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> clone https://github.com/ApsaraDB/tpch-dbgen.git
$ <span class="token builtin class-name">cd</span> tpch-dbgen
$ ./build.sh <span class="token parameter variable">--help</span>

  <span class="token number">1</span><span class="token punctuation">)</span> Use default configuration to build
  ./build.sh
  <span class="token number">2</span><span class="token punctuation">)</span> Use limited configuration to build
  ./build.sh <span class="token parameter variable">--user</span><span class="token operator">=</span>postgres <span class="token parameter variable">--db</span><span class="token operator">=</span>postgres <span class="token parameter variable">--host</span><span class="token operator">=</span>localhost <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">5432</span> <span class="token parameter variable">--scale</span><span class="token operator">=</span><span class="token number">1</span>
  <span class="token number">3</span><span class="token punctuation">)</span> Run the <span class="token builtin class-name">test</span> <span class="token keyword">case</span>
  ./build.sh <span class="token parameter variable">--run</span>
  <span class="token number">4</span><span class="token punctuation">)</span> Run the target <span class="token builtin class-name">test</span> <span class="token keyword">case</span>
  ./build.sh <span class="token parameter variable">--run</span><span class="token operator">=</span><span class="token number">3</span>. run the 3rd case.
  <span class="token number">5</span><span class="token punctuation">)</span> Run the target <span class="token builtin class-name">test</span> <span class="token keyword">case</span> with option
  ./build.sh <span class="token parameter variable">--run</span> <span class="token parameter variable">--option</span><span class="token operator">=</span><span class="token string">&quot;set polar_enable_px = on;&quot;</span>
  <span class="token number">6</span><span class="token punctuation">)</span> Clean the <span class="token builtin class-name">test</span> data. This step will drop the database or tables, remove csv
  and tbl files
  ./build.sh <span class="token parameter variable">--clean</span>
  <span class="token number">7</span><span class="token punctuation">)</span> Quick build TPC-H with 100MB scale of data
  ./build.sh <span class="token parameter variable">--scale</span><span class="token operator">=</span><span class="token number">0.1</span>
</code></pre></div><p>通过设置不同的参数，可以定制化地创建不同规模的 TPC-H 数据集。<code>build.sh</code> 脚本中各个参数的含义如下：</p><ul><li><code>--user</code>：数据库用户名</li><li><code>--db</code>：数据库名</li><li><code>--host</code>：数据库主机地址</li><li><code>--port</code>：数据库服务端口</li><li><code>--run</code>：执行所有 TPC-H 查询，或执行某条特定的 TPC-H 查询</li><li><code>--option</code>：额外指定 GUC 参数</li><li><code>--scale</code>：生成 TPC-H 数据集的规模，单位为 GB</li></ul><p>该脚本没有提供输入数据库密码的参数，需要通过设置 <code>PGPASSWORD</code> 为数据库用户的数据库密码来完成认证：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">PGPASSWORD</span><span class="token operator">=</span><span class="token operator">&lt;</span>your password<span class="token operator">&gt;</span>
</code></pre></div><p>生成并导入 100MB 规模的 TPC-H 数据：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>./build.sh <span class="token parameter variable">--scale</span><span class="token operator">=</span><span class="token number">0.1</span>
</code></pre></div><p>生成并导入 1GB 规模的 TPC-H 数据：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>./build.sh
</code></pre></div><h2 id="执行-postgresql-单机并行执行" tabindex="-1"><a class="header-anchor" href="#执行-postgresql-单机并行执行" aria-hidden="true">#</a> 执行 PostgreSQL 单机并行执行</h2><p>以 TPC-H 的 Q18 为例，执行 PostgreSQL 的单机并行查询，并观测查询速度。</p><p>在 <code>tpch-dbgen/</code> 目录下通过 <code>psql</code> 连接到数据库：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> tpch-dbgen
psql
</code></pre></div><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 打开计时</span>
\\timing <span class="token keyword">on</span>

<span class="token comment">-- 设置单机并行度</span>
<span class="token keyword">SET</span> max_parallel_workers_per_gather <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token comment">-- 查看 Q18 的执行计划</span>
\\i finals<span class="token operator">/</span><span class="token number">18.</span><span class="token keyword">explain</span><span class="token punctuation">.</span><span class="token keyword">sql</span>
                                                                         QUERY <span class="token keyword">PLAN</span>
<span class="token comment">------------------------------------------------------------------------------------------------------------------------------------------------------------</span>
 Sort  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">3450834.75</span><span class="token punctuation">.</span><span class="token number">.3450835</span><span class="token number">.42</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">268</span> width<span class="token operator">=</span><span class="token number">81</span><span class="token punctuation">)</span>
   Sort <span class="token keyword">Key</span>: orders<span class="token punctuation">.</span>o_totalprice <span class="token keyword">DESC</span><span class="token punctuation">,</span> orders<span class="token punctuation">.</span>o_orderdate
   <span class="token operator">-</span><span class="token operator">&gt;</span>  GroupAggregate  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">3450817.91</span><span class="token punctuation">.</span><span class="token number">.3450823</span><span class="token number">.94</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">268</span> width<span class="token operator">=</span><span class="token number">81</span><span class="token punctuation">)</span>
         <span class="token keyword">Group</span> <span class="token keyword">Key</span>: customer<span class="token punctuation">.</span>c_custkey<span class="token punctuation">,</span> orders<span class="token punctuation">.</span>o_orderkey
         <span class="token operator">-</span><span class="token operator">&gt;</span>  Sort  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">3450817.91</span><span class="token punctuation">.</span><span class="token number">.3450818</span><span class="token number">.58</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">268</span> width<span class="token operator">=</span><span class="token number">67</span><span class="token punctuation">)</span>
               Sort <span class="token keyword">Key</span>: customer<span class="token punctuation">.</span>c_custkey<span class="token punctuation">,</span> orders<span class="token punctuation">.</span>o_orderkey
               <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span> <span class="token keyword">Join</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">1501454.20</span><span class="token punctuation">.</span><span class="token number">.3450807</span><span class="token number">.10</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">268</span> width<span class="token operator">=</span><span class="token number">67</span><span class="token punctuation">)</span>
                     <span class="token keyword">Hash</span> Cond: <span class="token punctuation">(</span>lineitem<span class="token punctuation">.</span>l_orderkey <span class="token operator">=</span> orders<span class="token punctuation">.</span>o_orderkey<span class="token punctuation">)</span>
                     <span class="token operator">-</span><span class="token operator">&gt;</span>  Seq Scan <span class="token keyword">on</span> lineitem  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.1724402</span><span class="token number">.52</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">59986052</span> width<span class="token operator">=</span><span class="token number">22</span><span class="token punctuation">)</span>
                     <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">1501453.37</span><span class="token punctuation">.</span><span class="token number">.1501453</span><span class="token number">.37</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">67</span> width<span class="token operator">=</span><span class="token number">53</span><span class="token punctuation">)</span>
                           <span class="token operator">-</span><span class="token operator">&gt;</span>  Nested <span class="token keyword">Loop</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">1500465.85</span><span class="token punctuation">.</span><span class="token number">.1501453</span><span class="token number">.37</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">67</span> width<span class="token operator">=</span><span class="token number">53</span><span class="token punctuation">)</span>
                                 <span class="token operator">-</span><span class="token operator">&gt;</span>  Nested <span class="token keyword">Loop</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">1500465.43</span><span class="token punctuation">.</span><span class="token number">.1501084</span><span class="token number">.65</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">67</span> width<span class="token operator">=</span><span class="token number">34</span><span class="token punctuation">)</span>
                                       <span class="token operator">-</span><span class="token operator">&gt;</span>  Finalize GroupAggregate  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">1500464.99</span><span class="token punctuation">.</span><span class="token number">.1500517</span><span class="token number">.66</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">67</span> width<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>
                                             <span class="token keyword">Group</span> <span class="token keyword">Key</span>: lineitem_1<span class="token punctuation">.</span>l_orderkey
                                             Filter: <span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span>lineitem_1<span class="token punctuation">.</span>l_quantity<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token string">&#39;314&#39;</span>::<span class="token keyword">numeric</span><span class="token punctuation">)</span>
                                             <span class="token operator">-</span><span class="token operator">&gt;</span>  Gather <span class="token keyword">Merge</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">1500464.99</span><span class="token punctuation">.</span><span class="token number">.1500511</span><span class="token number">.66</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">400</span> width<span class="token operator">=</span><span class="token number">36</span><span class="token punctuation">)</span>
                                                   Workers Planned: <span class="token number">2</span>
                                                   <span class="token operator">-</span><span class="token operator">&gt;</span>  Sort  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">1499464.97</span><span class="token punctuation">.</span><span class="token number">.1499465</span><span class="token number">.47</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">200</span> width<span class="token operator">=</span><span class="token number">36</span><span class="token punctuation">)</span>
                                                         Sort <span class="token keyword">Key</span>: lineitem_1<span class="token punctuation">.</span>l_orderkey
                                                         <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Partial</span> HashAggregate  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">1499454.82</span><span class="token punctuation">.</span><span class="token number">.1499457</span><span class="token number">.32</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">200</span> width<span class="token operator">=</span><span class="token number">36</span><span class="token punctuation">)</span>
                                                               <span class="token keyword">Group</span> <span class="token keyword">Key</span>: lineitem_1<span class="token punctuation">.</span>l_orderkey
                                                               <span class="token operator">-</span><span class="token operator">&gt;</span>  Parallel Seq Scan <span class="token keyword">on</span> lineitem lineitem_1  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.1374483</span><span class="token number">.88</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">24994188</span> width<span class="token operator">=</span><span class="token number">22</span><span class="token punctuation">)</span>
                                       <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Index</span> Scan <span class="token keyword">using</span> orders_pkey <span class="token keyword">on</span> orders  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.43</span><span class="token punctuation">.</span><span class="token number">.8</span><span class="token number">.45</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">1</span> width<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>
                                             <span class="token keyword">Index</span> Cond: <span class="token punctuation">(</span>o_orderkey <span class="token operator">=</span> lineitem_1<span class="token punctuation">.</span>l_orderkey<span class="token punctuation">)</span>
                                 <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Index</span> Scan <span class="token keyword">using</span> customer_pkey <span class="token keyword">on</span> customer  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.43</span><span class="token punctuation">.</span><span class="token number">.5</span><span class="token number">.50</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">1</span> width<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">)</span>
                                       <span class="token keyword">Index</span> Cond: <span class="token punctuation">(</span>c_custkey <span class="token operator">=</span> orders<span class="token punctuation">.</span>o_custkey<span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">26</span> <span class="token keyword">rows</span><span class="token punctuation">)</span>

<span class="token keyword">Time</span>: <span class="token number">3.965</span> ms

<span class="token comment">-- 执行 Q18</span>
\\i finals<span class="token operator">/</span><span class="token number">18.</span><span class="token keyword">sql</span>
       c_name       <span class="token operator">|</span> c_custkey <span class="token operator">|</span> o_orderkey <span class="token operator">|</span> o_orderdate <span class="token operator">|</span> o_totalprice <span class="token operator">|</span>  sum
<span class="token comment">--------------------+-----------+------------+-------------+--------------+--------</span>
 Customer<span class="token comment">#001287812 |   1287812 |   42290181 | 1997-11-26  |    558289.17 | 318.00</span>
 Customer<span class="token comment">#001172513 |   1172513 |   36667107 | 1997-06-06  |    550142.18 | 322.00</span>
 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
 Customer<span class="token comment">#001288183 |   1288183 |   48943904 | 1996-07-22  |    398081.59 | 325.00</span>
 Customer<span class="token comment">#000114613 |    114613 |   59930883 | 1997-05-17  |    394335.49 | 319.00</span>
<span class="token punctuation">(</span><span class="token number">84</span> <span class="token keyword">rows</span><span class="token punctuation">)</span>

<span class="token keyword">Time</span>: <span class="token number">80150.449</span> ms <span class="token punctuation">(</span><span class="token number">01</span>:<span class="token number">20.150</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="执行-epq-单机并行执行" tabindex="-1"><a class="header-anchor" href="#执行-epq-单机并行执行" aria-hidden="true">#</a> 执行 ePQ 单机并行执行</h2><p>PolarDB for PostgreSQL 提供了弹性跨机并行查询（ePQ）的能力，非常适合进行分析型查询。下面的步骤将引导您可以在一台主机上使用 ePQ 并行执行 TPC-H 查询。</p><p>在 <code>tpch-dbgen/</code> 目录下通过 <code>psql</code> 连接到数据库：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> tpch-dbgen
psql
</code></pre></div><p>首先需要对 TPC-H 产生的八张表设置 ePQ 的最大查询并行度：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> nation <span class="token keyword">SET</span> <span class="token punctuation">(</span>px_workers <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> region <span class="token keyword">SET</span> <span class="token punctuation">(</span>px_workers <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> supplier <span class="token keyword">SET</span> <span class="token punctuation">(</span>px_workers <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> part <span class="token keyword">SET</span> <span class="token punctuation">(</span>px_workers <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> partsupp <span class="token keyword">SET</span> <span class="token punctuation">(</span>px_workers <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> customer <span class="token keyword">SET</span> <span class="token punctuation">(</span>px_workers <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> orders <span class="token keyword">SET</span> <span class="token punctuation">(</span>px_workers <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> lineitem <span class="token keyword">SET</span> <span class="token punctuation">(</span>px_workers <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>以 Q18 为例，执行查询：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 打开计时</span>
\\timing <span class="token keyword">on</span>

<span class="token comment">-- 打开 ePQ 功能的开关</span>
<span class="token keyword">SET</span> polar_enable_px <span class="token operator">=</span> <span class="token keyword">ON</span><span class="token punctuation">;</span>
<span class="token comment">-- 设置每个节点的 ePQ 并行度为 1</span>
<span class="token keyword">SET</span> polar_px_dop_per_node <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment">-- 查看 Q18 的执行计划</span>
\\i finals<span class="token operator">/</span><span class="token number">18.</span><span class="token keyword">explain</span><span class="token punctuation">.</span><span class="token keyword">sql</span>
                                                                          QUERY <span class="token keyword">PLAN</span>
<span class="token comment">---------------------------------------------------------------------------------------------------------------------------------------------------------------</span>
 PX Coordinator <span class="token number">2</span>:<span class="token number">1</span>  <span class="token punctuation">(</span>slice1<span class="token punctuation">;</span> segments: <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.257526</span><span class="token number">.21</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">59986052</span> width<span class="token operator">=</span><span class="token number">47</span><span class="token punctuation">)</span>
   <span class="token keyword">Merge</span> <span class="token keyword">Key</span>: orders<span class="token punctuation">.</span>o_totalprice<span class="token punctuation">,</span> orders<span class="token punctuation">.</span>o_orderdate
   <span class="token operator">-</span><span class="token operator">&gt;</span>  GroupAggregate  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.243457</span><span class="token number">.68</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">29993026</span> width<span class="token operator">=</span><span class="token number">47</span><span class="token punctuation">)</span>
         <span class="token keyword">Group</span> <span class="token keyword">Key</span>: orders<span class="token punctuation">.</span>o_totalprice<span class="token punctuation">,</span> orders<span class="token punctuation">.</span>o_orderdate<span class="token punctuation">,</span> customer<span class="token punctuation">.</span>c_name<span class="token punctuation">,</span> customer<span class="token punctuation">.</span>c_custkey<span class="token punctuation">,</span> orders<span class="token punctuation">.</span>o_orderkey
         <span class="token operator">-</span><span class="token operator">&gt;</span>  Sort  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.241257</span><span class="token number">.18</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">29993026</span> width<span class="token operator">=</span><span class="token number">47</span><span class="token punctuation">)</span>
               Sort <span class="token keyword">Key</span>: orders<span class="token punctuation">.</span>o_totalprice <span class="token keyword">DESC</span><span class="token punctuation">,</span> orders<span class="token punctuation">.</span>o_orderdate<span class="token punctuation">,</span> customer<span class="token punctuation">.</span>c_name<span class="token punctuation">,</span> customer<span class="token punctuation">.</span>c_custkey<span class="token punctuation">,</span> orders<span class="token punctuation">.</span>o_orderkey
               <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span> <span class="token keyword">Join</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.42729</span><span class="token number">.99</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">29993026</span> width<span class="token operator">=</span><span class="token number">47</span><span class="token punctuation">)</span>
                     <span class="token keyword">Hash</span> Cond: <span class="token punctuation">(</span>orders<span class="token punctuation">.</span>o_orderkey <span class="token operator">=</span> lineitem_1<span class="token punctuation">.</span>l_orderkey<span class="token punctuation">)</span>
                     <span class="token operator">-</span><span class="token operator">&gt;</span>  PX <span class="token keyword">Hash</span> <span class="token number">2</span>:<span class="token number">2</span>  <span class="token punctuation">(</span>slice2<span class="token punctuation">;</span> segments: <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.15959</span><span class="token number">.71</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">7500000</span> width<span class="token operator">=</span><span class="token number">39</span><span class="token punctuation">)</span>
                           <span class="token keyword">Hash</span> <span class="token keyword">Key</span>: orders<span class="token punctuation">.</span>o_orderkey
                           <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span> <span class="token keyword">Join</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.15044</span><span class="token number">.19</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">7500000</span> width<span class="token operator">=</span><span class="token number">39</span><span class="token punctuation">)</span>
                                 <span class="token keyword">Hash</span> Cond: <span class="token punctuation">(</span>orders<span class="token punctuation">.</span>o_custkey <span class="token operator">=</span> customer<span class="token punctuation">.</span>c_custkey<span class="token punctuation">)</span>
                                 <span class="token operator">-</span><span class="token operator">&gt;</span>  PX <span class="token keyword">Hash</span> <span class="token number">2</span>:<span class="token number">2</span>  <span class="token punctuation">(</span>slice3<span class="token punctuation">;</span> segments: <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.11561</span><span class="token number">.51</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">7500000</span> width<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>
                                       <span class="token keyword">Hash</span> <span class="token keyword">Key</span>: orders<span class="token punctuation">.</span>o_custkey
                                       <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span> Semi <span class="token keyword">Join</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.11092</span><span class="token number">.01</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">7500000</span> width<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>
                                             <span class="token keyword">Hash</span> Cond: <span class="token punctuation">(</span>orders<span class="token punctuation">.</span>o_orderkey <span class="token operator">=</span> lineitem<span class="token punctuation">.</span>l_orderkey<span class="token punctuation">)</span>
                                             <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Partial</span> Seq Scan <span class="token keyword">on</span> orders  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.1132</span><span class="token number">.25</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">7500000</span> width<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>
                                             <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">7760.84</span><span class="token punctuation">.</span><span class="token number">.7760</span><span class="token number">.84</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">400</span> width<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>
                                                   <span class="token operator">-</span><span class="token operator">&gt;</span>  PX Broadcast <span class="token number">2</span>:<span class="token number">2</span>  <span class="token punctuation">(</span>slice4<span class="token punctuation">;</span> segments: <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.7760</span><span class="token number">.84</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">400</span> width<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>
                                                         <span class="token operator">-</span><span class="token operator">&gt;</span>  Result  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.7760</span><span class="token number">.80</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">200</span> width<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>
                                                               Filter: <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span>lineitem<span class="token punctuation">.</span>l_quantity<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token string">&#39;314&#39;</span>::<span class="token keyword">numeric</span><span class="token punctuation">)</span>
                                                               <span class="token operator">-</span><span class="token operator">&gt;</span>  Finalize HashAggregate  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.7760</span><span class="token number">.78</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">500</span> width<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>
                                                                     <span class="token keyword">Group</span> <span class="token keyword">Key</span>: lineitem<span class="token punctuation">.</span>l_orderkey
                                                                     <span class="token operator">-</span><span class="token operator">&gt;</span>  PX <span class="token keyword">Hash</span> <span class="token number">2</span>:<span class="token number">2</span>  <span class="token punctuation">(</span>slice5<span class="token punctuation">;</span> segments: <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.7760</span><span class="token number">.72</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">500</span> width<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>
                                                                           <span class="token keyword">Hash</span> <span class="token keyword">Key</span>: lineitem<span class="token punctuation">.</span>l_orderkey
                                                                           <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Partial</span> HashAggregate  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.7760</span><span class="token number">.70</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">500</span> width<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>
                                                                                 <span class="token keyword">Group</span> <span class="token keyword">Key</span>: lineitem<span class="token punctuation">.</span>l_orderkey
                                                                                 <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Partial</span> Seq Scan <span class="token keyword">on</span> lineitem  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.3350</span><span class="token number">.82</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">29993026</span> width<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>
                                 <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">597.51</span><span class="token punctuation">.</span><span class="token number">.597</span><span class="token number">.51</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">749979</span> width<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">)</span>
                                       <span class="token operator">-</span><span class="token operator">&gt;</span>  PX <span class="token keyword">Hash</span> <span class="token number">2</span>:<span class="token number">2</span>  <span class="token punctuation">(</span>slice6<span class="token punctuation">;</span> segments: <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.597</span><span class="token number">.51</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">749979</span> width<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">)</span>
                                             <span class="token keyword">Hash</span> <span class="token keyword">Key</span>: customer<span class="token punctuation">.</span>c_custkey
                                             <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Partial</span> Seq Scan <span class="token keyword">on</span> customer  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.511</span><span class="token number">.44</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">749979</span> width<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">)</span>
                     <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">5146.80</span><span class="token punctuation">.</span><span class="token number">.5146</span><span class="token number">.80</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">29993026</span> width<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>
                           <span class="token operator">-</span><span class="token operator">&gt;</span>  PX <span class="token keyword">Hash</span> <span class="token number">2</span>:<span class="token number">2</span>  <span class="token punctuation">(</span>slice7<span class="token punctuation">;</span> segments: <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.5146</span><span class="token number">.80</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">29993026</span> width<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>
                                 <span class="token keyword">Hash</span> <span class="token keyword">Key</span>: lineitem_1<span class="token punctuation">.</span>l_orderkey
                                 <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Partial</span> Seq Scan <span class="token keyword">on</span> lineitem lineitem_1  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.3350</span><span class="token number">.82</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">29993026</span> width<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>
 Optimizer: PolarDB PX Optimizer
<span class="token punctuation">(</span><span class="token number">37</span> <span class="token keyword">rows</span><span class="token punctuation">)</span>

<span class="token keyword">Time</span>: <span class="token number">216.672</span> ms

<span class="token comment">-- 执行 Q18</span>
       c_name       <span class="token operator">|</span> c_custkey <span class="token operator">|</span> o_orderkey <span class="token operator">|</span> o_orderdate <span class="token operator">|</span> o_totalprice <span class="token operator">|</span>  sum
<span class="token comment">--------------------+-----------+------------+-------------+--------------+--------</span>
 Customer<span class="token comment">#001287812 |   1287812 |   42290181 | 1997-11-26  |    558289.17 | 318.00</span>
 Customer<span class="token comment">#001172513 |   1172513 |   36667107 | 1997-06-06  |    550142.18 | 322.00</span>
 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
 Customer<span class="token comment">#001288183 |   1288183 |   48943904 | 1996-07-22  |    398081.59 | 325.00</span>
 Customer<span class="token comment">#000114613 |    114613 |   59930883 | 1997-05-17  |    394335.49 | 319.00</span>
<span class="token punctuation">(</span><span class="token number">84</span> <span class="token keyword">rows</span><span class="token punctuation">)</span>

<span class="token keyword">Time</span>: <span class="token number">59113.965</span> ms <span class="token punctuation">(</span><span class="token number">00</span>:<span class="token number">59.114</span><span class="token punctuation">)</span>
</code></pre></div><p>可以看到比 PostgreSQL 的单机并行执行的时间略短。加大 ePQ 功能的节点并行度，查询性能将会有更明显的提升：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> polar_px_dop_per_node <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
\\i finals<span class="token operator">/</span><span class="token number">18.</span><span class="token keyword">sql</span>
       c_name       <span class="token operator">|</span> c_custkey <span class="token operator">|</span> o_orderkey <span class="token operator">|</span> o_orderdate <span class="token operator">|</span> o_totalprice <span class="token operator">|</span>  sum
<span class="token comment">--------------------+-----------+------------+-------------+--------------+--------</span>
 Customer<span class="token comment">#001287812 |   1287812 |   42290181 | 1997-11-26  |    558289.17 | 318.00</span>
 Customer<span class="token comment">#001172513 |   1172513 |   36667107 | 1997-06-06  |    550142.18 | 322.00</span>
 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
 Customer<span class="token comment">#001288183 |   1288183 |   48943904 | 1996-07-22  |    398081.59 | 325.00</span>
 Customer<span class="token comment">#000114613 |    114613 |   59930883 | 1997-05-17  |    394335.49 | 319.00</span>
<span class="token punctuation">(</span><span class="token number">84</span> <span class="token keyword">rows</span><span class="token punctuation">)</span>

<span class="token keyword">Time</span>: <span class="token number">42400.500</span> ms <span class="token punctuation">(</span><span class="token number">00</span>:<span class="token number">42.401</span><span class="token punctuation">)</span>

<span class="token keyword">SET</span> polar_px_dop_per_node <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
\\i finals<span class="token operator">/</span><span class="token number">18.</span><span class="token keyword">sql</span>

       c_name       <span class="token operator">|</span> c_custkey <span class="token operator">|</span> o_orderkey <span class="token operator">|</span> o_orderdate <span class="token operator">|</span> o_totalprice <span class="token operator">|</span>  sum
<span class="token comment">--------------------+-----------+------------+-------------+--------------+--------</span>
 Customer<span class="token comment">#001287812 |   1287812 |   42290181 | 1997-11-26  |    558289.17 | 318.00</span>
 Customer<span class="token comment">#001172513 |   1172513 |   36667107 | 1997-06-06  |    550142.18 | 322.00</span>
 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
 Customer<span class="token comment">#001288183 |   1288183 |   48943904 | 1996-07-22  |    398081.59 | 325.00</span>
 Customer<span class="token comment">#000114613 |    114613 |   59930883 | 1997-05-17  |    394335.49 | 319.00</span>
<span class="token punctuation">(</span><span class="token number">84</span> <span class="token keyword">rows</span><span class="token punctuation">)</span>

<span class="token keyword">Time</span>: <span class="token number">19892.603</span> ms <span class="token punctuation">(</span><span class="token number">00</span>:<span class="token number">19.893</span><span class="token punctuation">)</span>

<span class="token keyword">SET</span> polar_px_dop_per_node <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
\\i finals<span class="token operator">/</span><span class="token number">18.</span><span class="token keyword">sql</span>
       c_name       <span class="token operator">|</span> c_custkey <span class="token operator">|</span> o_orderkey <span class="token operator">|</span> o_orderdate <span class="token operator">|</span> o_totalprice <span class="token operator">|</span>  sum
<span class="token comment">--------------------+-----------+------------+-------------+--------------+--------</span>
 Customer<span class="token comment">#001287812 |   1287812 |   42290181 | 1997-11-26  |    558289.17 | 318.00</span>
 Customer<span class="token comment">#001172513 |   1172513 |   36667107 | 1997-06-06  |    550142.18 | 322.00</span>
 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
 Customer<span class="token comment">#001288183 |   1288183 |   48943904 | 1996-07-22  |    398081.59 | 325.00</span>
 Customer<span class="token comment">#000114613 |    114613 |   59930883 | 1997-05-17  |    394335.49 | 319.00</span>
<span class="token punctuation">(</span><span class="token number">84</span> <span class="token keyword">rows</span><span class="token punctuation">)</span>

<span class="token keyword">Time</span>: <span class="token number">10944.402</span> ms <span class="token punctuation">(</span><span class="token number">00</span>:<span class="token number">10.944</span><span class="token punctuation">)</span>
</code></pre></div><blockquote><p>使用 ePQ 执行 Q17 和 Q18 时可能会出现 OOM。需要设置以下参数防止用尽内存：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> polar_px_optimizer_enable_hashagg <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
</code></pre></div></blockquote><h2 id="执行-epq-跨机并行执行" tabindex="-1"><a class="header-anchor" href="#执行-epq-跨机并行执行" aria-hidden="true">#</a> 执行 ePQ 跨机并行执行</h2><p>在上面的例子中，出于简单考虑，PolarDB for PostgreSQL 的多个计算节点被部署在同一台主机上。在这种场景下使用 ePQ 时，由于所有的计算节点都使用了同一台主机的 CPU、内存、I/O 带宽，因此本质上是基于单台主机的并行执行。实际上，PolarDB for PostgreSQL 的计算节点可以被部署在能够共享存储节点的多台机器上。此时使用 ePQ 功能将进行真正的跨机器分布式并行查询，能够充分利用多台机器上的计算资源。</p>`,27),S=t(`<blockquote><p>如果遇到如下错误：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>psql:queries/q01.analyze.sq1:24: WARNING:  interconnect may encountered a network error, please check your network
DETAIL:  Failed to send packet <span class="token punctuation">(</span>seq <span class="token number">1</span><span class="token punctuation">)</span> to <span class="token number">192.168</span>.1.8:57871 <span class="token punctuation">(</span>pid <span class="token number">17766</span> cid <span class="token number">0</span><span class="token punctuation">)</span> after <span class="token number">100</span> retries.
</code></pre></div><p>可以尝试统一修改每台机器的 MTU 为 9000：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">ifconfig</span> <span class="token operator">&lt;</span>网卡名<span class="token operator">&gt;</span> mtu <span class="token number">9000</span>
</code></pre></div></blockquote>`,1);function q(l,v){const k=e("ArticleInfo"),o=e("router-link"),c=e("ExternalLinkIcon"),r=e("RouterLink");return i(),d("div",null,[b,a(k,{frontmatter:l.$frontmatter},null,8,["frontmatter"]),w,s("nav",y,[s("ul",null,[s("li",null,[a(o,{to:"#背景"},{default:p(()=>[n("背景")]),_:1})]),s("li",null,[a(o,{to:"#测试准备"},{default:p(()=>[n("测试准备")]),_:1}),s("ul",null,[s("li",null,[a(o,{to:"#部署-polardb-pg"},{default:p(()=>[n("部署 PolarDB-PG")]),_:1})]),s("li",null,[a(o,{to:"#生成-tpc-h-测试数据集"},{default:p(()=>[n("生成 TPC-H 测试数据集")]),_:1})])])]),s("li",null,[a(o,{to:"#执行-postgresql-单机并行执行"},{default:p(()=>[n("执行 PostgreSQL 单机并行执行")]),_:1})]),s("li",null,[a(o,{to:"#执行-epq-单机并行执行"},{default:p(()=>[n("执行 ePQ 单机并行执行")]),_:1})]),s("li",null,[a(o,{to:"#执行-epq-跨机并行执行"},{default:p(()=>[n("执行 ePQ 跨机并行执行")]),_:1})])])]),h,s("p",null,[s("a",g,[n("TPC-H"),a(c)]),n(" 是专门测试数据库分析型场景性能的数据集。")]),_,s("p",null,[n("或者参考 "),a(r,{to:"/deploying/deploy.html"},{default:p(()=>[n("进阶部署")]),_:1}),n(" 部署一个基于共享存储的 PolarDB for PostgreSQL 集群。")]),P,s("p",null,[n("通过 "),s("a",f,[n("tpch-dbgen"),a(c)]),n(" 工具来生成测试数据。")]),T,s("p",null,[n("参考 "),a(r,{to:"/deploying/deploy.html"},{default:p(()=>[n("进阶部署")]),_:1}),n(" 可以搭建起不同形态的 PolarDB for PostgreSQL 集群。集群搭建成功后，使用 ePQ 的方式与单机 ePQ 完全相同。")]),S])}const C=u(m,[["render",q],["__file","tpch-test.html.vue"]]);export{C as default};
