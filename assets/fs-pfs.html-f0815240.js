import{_ as i,M as o,p as k,q as d,N as a,R as n,V as p,t as s,a1 as c}from"./framework-de73eade.js";const h={},f=n("h1",{id:"格式化并挂载-pfs",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#格式化并挂载-pfs","aria-hidden":"true"},"#"),s(" 格式化并挂载 PFS")],-1),m=n("p",null,"PolarDB File System，简称 PFS 或 PolarFS，是由阿里云自主研发的高性能类 POSIX 的用户态分布式文件系统，服务于阿里云数据库 PolarDB 产品。使用 PFS 对共享存储进行格式化并挂载后，能够保证一个计算节点对共享存储的写入能够立刻对另一个计算节点可见。",-1),b={class:"table-of-contents"},_=n("h2",{id:"pfs-编译安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pfs-编译安装","aria-hidden":"true"},"#"),s(" PFS 编译安装")],-1),g={href:"https://hub.docker.com/u/polardb",target:"_blank",rel:"noopener noreferrer"},v={href:"https://hub.docker.com/r/polardb/polardb_pg_binary/tags",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"linux/amd64",-1),P=n("code",null,"linux/arm64",-1),S=c(`<div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull polardb/polardb_pg_binary:pfs
<span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token punctuation">\\</span>
    --cap-add<span class="token operator">=</span>SYS_PTRACE <span class="token punctuation">\\</span>
    <span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token punctuation">\\</span>
    <span class="token parameter variable">--name</span> polardb_pg <span class="token punctuation">\\</span>
    --shm-size<span class="token operator">=</span>512m <span class="token punctuation">\\</span>
    polardb/polardb_pg_binary:pfs <span class="token punctuation">\\</span>
    <span class="token function">bash</span>
</code></pre></div>`,1),F={href:"https://github.com/ApsaraDB/polardb-file-system/blob/master/Readme-CN.md",target:"_blank",rel:"noopener noreferrer"},B=n("h2",{id:"块设备重命名",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#块设备重命名","aria-hidden":"true"},"#"),s(" 块设备重命名")],-1),D=n("strong",null,"以特定字符开头的块设备",-1),q={href:"https://github.com/ApsaraDB/PolarDB-FileSystem",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/ApsaraDB/PolarDB-FileSystem/blob/master/src/pfs_core/pfs_api.h",target:"_blank",rel:"noopener noreferrer"},A=n("code",null,"src/pfs_core/pfs_api.h",-1),N=c(`<div class="language-c" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">PFS_PATH_ISVALID</span><span class="token expression"><span class="token punctuation">(</span>path<span class="token punctuation">)</span>                                  </span><span class="token punctuation">\\</span>
    <span class="token expression"><span class="token punctuation">(</span>path <span class="token operator">!=</span> <span class="token constant">NULL</span> <span class="token operator">&amp;&amp;</span>                                            </span><span class="token punctuation">\\</span>
     <span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">(</span>path<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> </span><span class="token char">&#39;/&#39;</span> <span class="token expression"><span class="token operator">&amp;&amp;</span> <span class="token function">isdigit</span><span class="token punctuation">(</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> path<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> </span><span class="token char">&#39;.&#39;</span>  <span class="token punctuation">\\</span>
      <span class="token expression"><span class="token operator">||</span> <span class="token function">strncmp</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> </span><span class="token string">&quot;/pangu-&quot;</span><span class="token expression"><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>                       </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token operator">||</span> <span class="token function">strncmp</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> </span><span class="token string">&quot;/sd&quot;</span><span class="token expression"><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>                           </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token operator">||</span> <span class="token function">strncmp</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> </span><span class="token string">&quot;/sf&quot;</span><span class="token expression"><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>                           </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token operator">||</span> <span class="token function">strncmp</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> </span><span class="token string">&quot;/vd&quot;</span><span class="token expression"><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>                           </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token operator">||</span> <span class="token function">strncmp</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> </span><span class="token string">&quot;/nvme&quot;</span><span class="token expression"><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>                         </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token operator">||</span> <span class="token function">strncmp</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> </span><span class="token string">&quot;/loop&quot;</span><span class="token expression"><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>                         </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token operator">||</span> <span class="token function">strncmp</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> </span><span class="token string">&quot;/mapper_&quot;</span><span class="token expression"><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>
</code></pre></div><p>因此，为了保证能够顺畅完成后续流程，我们建议在所有访问块设备的节点上使用相同的软链接访问共享块设备。例如，在 NBD 服务端主机上，使用新的块设备名 <code>/dev/nvme1n1</code> 软链接到共享存储块设备的原有名称 <code>/dev/vdb</code> 上：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /dev/vdb /dev/nvme1n1
</code></pre></div><p>在 NBD 客户端主机上，使用同样的块设备名 <code>/dev/nvme1n1</code> 软链到共享存储块设备的原有名称 <code>/dev/nbd0</code> 上：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /dev/nbd0 /dev/nvme1n1
</code></pre></div><p>这样便可以在服务端和客户端两台主机上使用相同的块设备名 <code>/dev/nvme1n1</code> 访问同一个块设备。</p><h2 id="块设备格式化" tabindex="-1"><a class="header-anchor" href="#块设备格式化" aria-hidden="true">#</a> 块设备格式化</h2><p>使用 <strong>任意一台主机</strong>，在共享存储块设备上格式化 PFS 分布式文件系统：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pfs <span class="token parameter variable">-C</span> disk <span class="token function">mkfs</span> nvme1n1
</code></pre></div><h2 id="pfs-文件系统挂载" tabindex="-1"><a class="header-anchor" href="#pfs-文件系统挂载" aria-hidden="true">#</a> PFS 文件系统挂载</h2><p>在能够访问共享存储的 <strong>所有主机节点</strong> 上分别启动 PFS 守护进程，挂载 PFS 文件系统：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> /usr/local/polarstore/pfsd/bin/start_pfsd.sh <span class="token parameter variable">-p</span> nvme1n1 <span class="token parameter variable">-w</span> <span class="token number">2</span>
</code></pre></div><hr><h2 id="在-pfs-上编译部署-polardb" tabindex="-1"><a class="header-anchor" href="#在-pfs-上编译部署-polardb" aria-hidden="true">#</a> 在 PFS 上编译部署 PolarDB</h2>`,14);function L(l,I){const r=o("ArticleInfo"),t=o("router-link"),e=o("ExternalLinkIcon"),u=o("RouterLink");return k(),d("div",null,[f,a(r,{frontmatter:l.$frontmatter},null,8,["frontmatter"]),m,n("nav",b,[n("ul",null,[n("li",null,[a(t,{to:"#pfs-编译安装"},{default:p(()=>[s("PFS 编译安装")]),_:1})]),n("li",null,[a(t,{to:"#块设备重命名"},{default:p(()=>[s("块设备重命名")]),_:1})]),n("li",null,[a(t,{to:"#块设备格式化"},{default:p(()=>[s("块设备格式化")]),_:1})]),n("li",null,[a(t,{to:"#pfs-文件系统挂载"},{default:p(()=>[s("PFS 文件系统挂载")]),_:1})]),n("li",null,[a(t,{to:"#在-pfs-上编译部署-polardb"},{default:p(()=>[s("在 PFS 上编译部署 PolarDB")]),_:1})])])]),_,n("p",null,[s("推荐使用 "),n("a",g,[s("DockerHub"),a(e)]),s(" 上的 PolarDB for PostgreSQL "),n("a",v,[s("可执行文件镜像"),a(e)]),s("，目前支持 "),x,s(" 和 "),P,s(" 两种架构，其中已经包含了编译完毕的 PFS 工具，无需手动编译安装。通过以下命令进入容器即可：")]),S,n("p",null,[s("PFS 的手动编译安装方式请参考 PFS 的 "),n("a",F,[s("README"),a(e)]),s("，此处不再赘述。")]),B,n("p",null,[s("PFS 仅支持访问 "),D,s("（详情可见 "),n("a",q,[s("PolarDB File System"),a(e)]),s(" 源代码的 "),n("a",y,[A,a(e)]),s(" 文件）：")]),N,n("p",null,[s("参阅 "),a(u,{to:"/zh/deploying/db-pfs.html"},{default:p(()=>[s("PolarDB 编译部署：PFS 文件系统")]),_:1}),s("。")])])}const R=i(h,[["render",L],["__file","fs-pfs.html.vue"]]);export{R as default};
