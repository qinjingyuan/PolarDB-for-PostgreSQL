import{_ as c,M as s,p as d,q as r,R as n,t as a,N as e,V as o,a1 as l}from"./framework-de73eade.js";const p={},u=l('<h1 id="nbd-共享存储" tabindex="-1"><a class="header-anchor" href="#nbd-共享存储" aria-hidden="true">#</a> NBD 共享存储</h1><p>Network Block Device (NBD) 是一种网络协议，可以在多个主机间共享块存储设备。NBD 被设计为 Client-Server 的架构，因此至少需要两台物理机来部署。</p><p>以两台物理机环境为例，本小节介绍基于 NBD 共享存储的实例构建方法大体如下：</p><ul><li>首先，两台主机通过 NBD 共享一个块设备；</li><li>然后，两台主机上均部署 PolarDB File System (PFS) 来初始化并挂载到同一个块设备；</li><li>最后，在两台主机上分别部署 PolarDB for PostgreSQL 内核，构建主节点、只读节点以形成简单的一写多读实例。</li></ul><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>以上步骤在 CentOS 7.5 上通过测试。</p></div><h2 id="安装-nbd" tabindex="-1"><a class="header-anchor" href="#安装-nbd" aria-hidden="true">#</a> 安装 NBD</h2><h3 id="为操作系统下载安装-nbd-驱动" tabindex="-1"><a class="header-anchor" href="#为操作系统下载安装-nbd-驱动" aria-hidden="true">#</a> 为操作系统下载安装 NBD 驱动</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>操作系统内核需要支持 NBD 内核模块，如果操作系统当前不支持该内核模块，则需要自己通过对应内核版本进行编译和加载 NBD 内核模块。</p></div>',8),v={href:"https://www.centos.org/",target:"_blank",rel:"noopener noreferrer"},b=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rpm</span> <span class="token parameter variable">-ihv</span> kernel-3.10.0-862.el7.src.rpm
<span class="token builtin class-name">cd</span> ~/rpmbuild/SOURCES
<span class="token function">tar</span> Jxvf linux-3.10.0-862.el7.tar.xz <span class="token parameter variable">-C</span> /usr/src/kernels/
<span class="token builtin class-name">cd</span> /usr/src/kernels/linux-3.10.0-862.el7/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>NBD 驱动源码路径位于：<code>drivers/block/nbd.c</code>。接下来编译操作系统内核依赖和组件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> <span class="token punctuation">..</span>/<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-r</span><span class="token variable">)</span></span>/Module.symvers ./
<span class="token function">make</span> menuconfig <span class="token comment"># Device Driver -&gt; Block devices -&gt; Set &#39;M&#39; On &#39;Network block device support&#39;</span>
<span class="token function">make</span> prepare <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> modules_prepare <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> scripts
<span class="token function">make</span> <span class="token assign-left variable">CONFIG_BLK_DEV_NBD</span><span class="token operator">=</span>m <span class="token assign-left variable">M</span><span class="token operator">=</span>drivers/block
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>检查是否正常生成驱动：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>modinfo drivers/block/nbd.ko
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>拷贝、生成依赖并安装驱动：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> drivers/block/nbd.ko /lib/modules/<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-r</span><span class="token variable">)</span></span>/kernel/drivers/block
depmod <span class="token parameter variable">-a</span>
modprobe nbd <span class="token comment"># 或者 modprobe -f nbd 可以忽略模块版本检查</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>检查是否安装成功：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 检查已安装内核模块</span>
lsmod <span class="token operator">|</span> <span class="token function">grep</span> nbd
<span class="token comment"># 如果NBD驱动已经安装，则会生成/dev/nbd*设备（例如：/dev/nbd0、/dev/nbd1等）</span>
<span class="token function">ls</span> /dev/nbd*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装-nbd-软件包" tabindex="-1"><a class="header-anchor" href="#安装-nbd-软件包" aria-hidden="true">#</a> 安装 NBD 软件包</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> nbd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="使用-nbd-来共享块设备" tabindex="-1"><a class="header-anchor" href="#使用-nbd-来共享块设备" aria-hidden="true">#</a> 使用 NBD 来共享块设备</h2><h3 id="服务端部署" tabindex="-1"><a class="header-anchor" href="#服务端部署" aria-hidden="true">#</a> 服务端部署</h3><p>拉起 NBD 服务端，按照同步方式（<code>sync/flush=true</code>）配置，在指定端口（例如 <code>1921</code>）上监听对指定块设备（例如 <code>/dev/vdb</code>）的访问。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nbd-server <span class="token parameter variable">-C</span> /root/nbd.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置文件 <code>/root/nbd.conf</code> 的内容举例如下：</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">generic</span><span class="token punctuation">]</span></span>
    <span class="token comment">#user = nbd</span>
    <span class="token comment">#group = nbd</span>
    <span class="token key attr-name">listenaddr</span> <span class="token punctuation">=</span> <span class="token value attr-value">0.0.0.0</span>
    <span class="token key attr-name">port</span> <span class="token punctuation">=</span> <span class="token value attr-value">1921</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">export1</span><span class="token punctuation">]</span></span>
    <span class="token key attr-name">exportname</span> <span class="token punctuation">=</span> <span class="token value attr-value">/dev/vdb</span>
    <span class="token key attr-name">readonly</span> <span class="token punctuation">=</span> <span class="token value attr-value">false</span>
    <span class="token key attr-name">multifile</span> <span class="token punctuation">=</span> <span class="token value attr-value">false</span>
    <span class="token key attr-name">copyonwrite</span> <span class="token punctuation">=</span> <span class="token value attr-value">false</span>
    <span class="token key attr-name">flush</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>
    <span class="token key attr-name">fua</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>
    <span class="token key attr-name">sync</span> <span class="token punctuation">=</span> <span class="token value attr-value">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="客户端部署" tabindex="-1"><a class="header-anchor" href="#客户端部署" aria-hidden="true">#</a> 客户端部署</h3><p>NBD 驱动安装成功后会看到 <code>/dev/nbd*</code> 设备, 根据服务端的配置把远程块设备映射为本地的某个 NBD 设备即可：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nbd-client x.x.x.x <span class="token number">1921</span> <span class="token parameter variable">-N</span> export1 /dev/nbd0
<span class="token comment"># x.x.x.x是NBD服务端主机的IP地址</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="准备分布式文件系统" tabindex="-1"><a class="header-anchor" href="#准备分布式文件系统" aria-hidden="true">#</a> 准备分布式文件系统</h2>`,22);function m(k,h){const i=s("ExternalLinkIcon"),t=s("RouterLink");return d(),r("div",null,[u,n("p",null,[a("从 "),n("a",v,[a("CentOS 官网"),e(i)]),a(" 下载对应内核版本的驱动源码包并解压：")]),b,n("p",null,[a("参阅 "),e(t,{to:"/deploying/fs-pfs.html"},{default:o(()=>[a("格式化并挂载 PFS")]),_:1}),a("。")])])}const f=c(p,[["render",m],["__file","storage-nbd.html.vue"]]);export{f as default};
